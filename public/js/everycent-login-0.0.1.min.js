!function(){angular.module("everycent.common",[])}(),function(){"use strict";function DateService(){function convertFromBankDateFormat(dateInBankDateFormat){if(!dateInBankDateFormat||!dateInBankDateFormat.match)return"";var dateParts=dateInBankDateFormat.match(/^(\d{2})\/(\d{2})\/(\d{4})$/);return 4!=dateParts.length?"":""+dateParts[3]+"/"+dateParts[1]+"/"+dateParts[2]}var service={convertFromBankDateFormat:convertFromBankDateFormat};return service}angular.module("everycent.common").factory("DateService",DateService)}(),function(){"use strict";function ecAmountFormatted(){function controller(){}var directive={restrict:"E",templateUrl:"app/common/ec-amount-formatted-directive.html",scope:{amount:"="},controller:controller,controllerAs:"vm",bindToController:!0};return directive}angular.module("everycent.common").directive("ecAmountFormatted",ecAmountFormatted),ecAmountFormatted.$inject=[]}(),function(){"use strict";function ecAmountLabel(){function controller(){function labelClasses(){var result={};return result["label-"+vm.type]=vm.amount>=0,result["label-danger"]=vm.amount<0,result}var vm=this;vm.labelClasses=labelClasses}var directive={restrict:"E",templateUrl:"app/common/ec-amount-label-directive.html",scope:{type:"@",label:"@",amount:"="},controller:controller,controllerAs:"vm",bindToController:!0};return directive}angular.module("everycent.common").directive("ecAmountLabel",ecAmountLabel),ecAmountLabel.$inject=[]}(),function(){"use strict";function ecAsDate(){function link(scope,element,attrs,ngModel){ngModel.$formatters.push(function(modelValue){return new Date(modelValue)})}var directive={restrict:"A",require:"ngModel",link:link};return directive}angular.module("everycent.common").directive("ecAsDate",ecAsDate),ecAsDate.$inject=[]}(),function(){"use strict";function ecAsDollars(){function link(scope,element,attrs,ngModel){element.on("blur",function(){var value=element.val();element.val(Number(value).toFixed(2))}),ngModel.$formatters.push(function(modelValue){return(modelValue/100).toFixed(2)}),ngModel.$parsers.push(function(viewValue){var number=Number(viewValue);return 100*number})}var directive={restrict:"A",require:"ngModel",link:link};return directive}angular.module("everycent.common").directive("ecAsDollars",ecAsDollars),ecAsDollars.$inject=["ecToDollarsFilter"]}(),function(){"use strict";function ecBindingCount(){var directive={restrict:"E",template:'<button class="btn btn-info btn-xs" ng-click="vm.updateBindingCount()">{{ vm.total }} bindings.</button>',scope:{},controller:controller,controllerAs:"vm",bindToController:!0};return directive}function controller(){function getScopeList(rs){function traverseScope(s){scopeList.push(s),s.$$nextSibling&&traverseScope(s.$$nextSibling),s.$$childHead&&traverseScope(s.$$childHead)}var scopeList=[];return traverseScope(rs),scopeList}function updateBindingCount(){var scopes=getScopeList(angular.element(document.querySelectorAll("[ng-app]")).scope());vm.total=_.uniq(_.flatten(scopes.map(function(s){return s.$$watchers}))).length}var vm=this;vm.updateBindingCount=updateBindingCount}angular.module("everycent.common").directive("ecBindingCount",ecBindingCount),controller.$inject=[]}(),function(){"use strict";function ecFormField(){var directive={restrict:"E",templateUrl:"app/common/ec-form-field-directive.html",scope:{label:"@",type:"@",labelWidth:"@",fieldWidth:"@",placeholder:"@",listOf:"@",isRequired:"=ngRequired",model:"=ngModel",change:"&ngChange",error:"=",name:"=fieldName"},controller:controller,controllerAs:"vm",bindToController:!0};return directive}function controller(LookupService){var vm=this;vm.labelWidth=2,vm.fieldWidth=10,"select"===vm.type&&LookupService.refreshList(vm.listOf).then(function(items){vm.items=items})}angular.module("everycent.common").directive("ecFormField",ecFormField),controller.$inject=["LookupService"]}(),function(){"use strict";function ecIcon(){function controller(){}var directive={restrict:"E",templateUrl:"app/common/ec-icon-directive.html",scope:{type:"@"},controller:controller,controllerAs:"vm",bindToController:!0};return directive}angular.module("everycent.common").directive("ecIcon",ecIcon)}(),function(){function ecMessage(){var directive={restrict:"E",templateUrl:"app/common/ec-message-directive.html",scope:{},controller:controller,controllerAs:"vm",bindToController:!0};return directive}function controller(MessageService){var vm=this;vm.ui=MessageService.getMessageData(),vm.remove=MessageService.clearMessage}angular.module("everycent.common").directive("ecMessage",ecMessage),controller.$inject=["MessageService"]}(),function(){"use strict";function ecPanel(){function controller(){var vm=this;vm.type="default"}var directive={restrict:"E",templateUrl:"app/common/ec-panel-directive.html",transclude:!0,scope:{type:"@",title:"@"},controller:controller,controllerAs:"vm",bindToController:!0};return directive}angular.module("everycent.common").directive("ecPanel",ecPanel)}(),function(){"use strict";function ecToDollars(){return function(input){return(input/100).toFixed(2)}}angular.module("everycent.common").filter("ecToDollars",ecToDollars)}(),function(){"use strict";function FormService(){function setErrors(form,errorData){Object.keys(errorData).forEach(function(field){form[field].$error.server=errorData[field][0]})}function resetForm(model,form,fields){fields.forEach(function(field){model[field]="",form[field]&&(form[field].$error={})})}var service={setErrors:setErrors,resetForm:resetForm};return service}angular.module("everycent.common").factory("FormService",FormService),FormService.$inject=[]}(),function(){"use strict";function LookupService(Restangular,$q){function refreshList(list,params){function _refreshFromServer(list,params){return promiseCache[list]=Restangular.all(list).getList(params).then(function(listValues){return dataCache[list]=listValues,listValues}),promiseCache[list]}return $q.when(dataCache[list]||promiseCache[list]||_refreshFromServer(list,params))}function clear(){dataCache={},promiseCache={}}var dataCache={},promiseCache={},service={clear:clear,refreshList:refreshList};return service}angular.module("everycent.common").factory("LookupService",LookupService),LookupService.$inject=["Restangular","$q"]}();var x=200;!function(){function MessageService(toastr){function getMessageData(){return data}function setMessage(message){clearMessage(),data.message=message,toastr.success(message)}function setErrorMessage(message){clearMessage(),data.errorMessage=message,toastr.error(message)}function setWarningMessage(message){clearMessage(),data.warningMessage=message,toastr.warning(message)}function clearMessage(){data.message="",data.errorMessage="",data.warningMessage=""}var data={},service={getMessageData:getMessageData,setMessage:setMessage,setErrorMessage:setErrorMessage,setWarningMessage:setWarningMessage,clearMessage:clearMessage};return service}angular.module("everycent.common").factory("MessageService",MessageService),MessageService.$inject=["toastr"]}(),function(){"use strict";function ModalService($modal,$document){function show(options){function modalController(){var vm=this;vm.options=options,modalFix(),vm.options.confirm=function(){modalInstance.close("ok")},vm.options.cancel=function(){modalInstance.dismiss("cancel")}}var modalInstance=$modal.open({templateUrl:"app/common/modal.html",backdrop:"static",controller:modalController,controllerAs:"vm"});return modalInstance.result}function modalFix(){setTimeout(function(){angular.element($document[0].querySelectorAll("div.modal-backdrop")).css("height","1000px")},100)}var service={show:show};return service}angular.module("everycent.common").factory("ModalService",ModalService),ModalService.$inject=["$modal","$document"]}(),function(){"use strict";function ReferenceService(){function updateReferenceId(model,referenceName){model[referenceName+"_id"]=model[referenceName].id}var service={updateReferenceId:updateReferenceId};return service}angular.module("everycent.common").factory("ReferenceService",ReferenceService),ReferenceService.$inject=[]}(),function(){"use strict";function StateService($state,$stateParams,MessageService){function goToState(state,params){return MessageService.clearMessage(),$state.go(state,params)}function go(state,params){return goToState(state,params)}function is(state){return $state.is(state)}function getParam(param){return $stateParams[param]}var service={goToState:goToState,go:go,is:is,getParam:getParam};return service}angular.module("everycent.common").factory("StateService",StateService),StateService.$inject=["$state","$stateParams","MessageService"]}(),function(){"use strict";function UserService(){function getUser(){return data.user}function setupUser(userDetails){data.user.name=userDetails.first_name+" "+userDetails.last_name,data.user.email=userDetails.email}function clear(){data.user.name="",data.user.email=""}var data={user:{}},service={getUser:getUser,setupUser:setupUser,clear:clear};return service}angular.module("everycent.common").factory("UserService",UserService),UserService.$inject=[]}(),function(){"use strict";function UtilService(){function total(items,fieldToSum){return _.reduce(items,function(sum,item){return item.deleted?sum:sum+item[fieldToSum]},0)}var service={total:total};return service}angular.module("everycent.common").factory("UtilService",UtilService),UtilService.$inject=[]}();
//# sourceMappingURL=everycent-login-0.0.1.min.map